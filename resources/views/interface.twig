<?php

declare(strict_types=1);

/**
 * NOTE: This class is auto generated by Tars Generator (https://github.com/wenbinye/tars-generator).
 *
 * Do not edit the class manually.
 * Tars Generator version: {{ generator_version }}
 */

namespace {{ namespace }};

{% if servant %}
use kuiper\tars\attribute\TarsServant;
{% else %}
use kuiper\tars\attribute\TarsClient;
{% endif %}
use kuiper\tars\attribute\TarsParameter;
use kuiper\tars\attribute\TarsReturnType;

#[{% if servant %}TarsServant{% else %}TarsClient{% endif %}("{{ servantName }}")]
interface {{ className }}
{
{% for operation in interface.operations %}
{% if operation.docBlock %}
    /**
{% for doc in operation.docBlock %}
     * {{ doc | raw }}
{% endfor %}
     */
{% endif %}
    #[TarsReturnType("{{ operation.returnType.tarsType | raw }}")]
{% if operation.parameters %}
    public function {{ operation.name }}(
{% for param in operation.parameters %}
        #[TarsParameter(type: "{{ param.type.tarsType | raw }}")] {% if param.declarationType %}{{ param.declarationType }} {% endif %}{% if param.out %}&{% endif %}${{ param.name }}{% if not loop.last %},{% endif %}

{% endfor %}
    ){% if operation.hasPhpReturnType() %}: {{ operation.phpReturnType }}{% endif %};
{% else %}
    public function {{ operation.name }}(){% if operation.hasPhpReturnType() %}: {{ operation.phpReturnType }}{% endif %};
{% endif %}

{% endfor %}
}
