<?php

declare(strict_types=1);

/**
 * NOTE: This class is auto generated by Tars Generator (https://github.com/wenbinye/tars-generator).
 *
 * Do not edit the class manually.
 * Tars Generator version: {{ generator_version }}
 */

namespace {{ namespace }};

{% if servant %}
use kuiper\jsonrpc\attribute\JsonRpcService;
{% else %}
use kuiper\jsonrpc\attribute\JsonRpcClient;
{% endif %}

#[{% if servant %}JsonRpcService(service: "{{ servantName }}"){% else %}JsonRpcClient(service: "{{ simpleServantName }}", ns: "{{ serverName }}"){% endif %}]
interface {{ className }}
{
{% for operation in interface.operations %}
    /**
{% if operation.docBlock %}
{% for doc in operation.docBlock %}
     * {{ doc | raw }}
{% endfor %}
{% endif %}
{% for param in operation.parameters %}
     * @param {{ param.type.docBlockType | raw }} ${{ param.name }}
{% endfor %}
     * @return {{ operation.returnType.docBlockType | raw }}
     */
{% if operation.parameters %}
    public function {{ operation.name }}({% for param in operation.parameters %}{% if param.declarationType %}{{ param.declarationType }} {% endif %}{% if param.out %}&{% endif %}${{ param.name }}{% if not loop.last %}, {% endif %}{% endfor %}){% if operation.hasPhpReturnType() %}: {{ operation.phpReturnType }}{% endif %};
{% else %}
    public function {{ operation.name }}(){% if operation.hasPhpReturnType() %}: {{ operation.phpReturnType }}{% endif %};
{% endif %}

{% endfor %}
}
